#!/usr/bin/env node
var coffeeify = require('caching-coffeeify');
var connect = require('connect');
var jwt = require('jwt-simple');
var iso8601 = require('iso8601');
var glob = require('glob');

var build = require('./build');

var CONSUMER_KEY = 'mockconsumer';
var CONSUMER_SECRET = 'mockconsumersecret';
var CONSUMER_TTL = 1800;

var routes = {}

// Token
routes['/api/token'] = function(request, response) {
  var payload = {
    'consumerKey': CONSUMER_KEY,
    'userId': 'alice',
    'issuedAt': new Date().toISOString(),
    'ttl': CONSUMER_TTL
  };
  var tok = jwt.encode(payload, CONSUMER_SECRET);

  response.setHeader('Access-Control-Allow-Origin', request.headers['origin']);
  response.setHeader('Access-Control-Allow-Credentials', 'true');
  response.setHeader('Access-Control-Expose-Headers', 'Location, Content-Type, Content-Length');

  if (request.method == 'OPTIONS') {
    response.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Content-Length');
    response.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');
    response.setHeader('Access-Control-Max-Age', '86400');
  }

  response.end(tok);
};


// Core
routes['/lib/annotator.js'] = build.core.serve({
  debug: true,
  standalone: 'Annotator'
});


// Plugins
for (var plugin in build.plugin) {
  routes[plugin] = build.plugin[plugin].serve({debug: true});
}


// Tests
for (var t in build.test) {
  routes[t] = build.test[t].serve({debug: true});
}


// Bootstrap
var app = module.exports = connect();
for (var route in routes) app.use(route, routes[route]);
app.use(connect.static(process.cwd()));


// Go
if (require.main === module) {
  app.listen(4000);
  console.log("Development: http://localhost:4000/dev.html");
  console.log("Testing: http://localhost:4000/test/runner.html");
}
